---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: octaviaworkers.octavia.openstack.org
spec:
  group: octavia.openstack.org
  names:
    kind: OctaviaWorker
    listKind: OctaviaWorkerList
    plural: octaviaworkers
    singular: octaviaworker
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: OctaviaWorker is the Schema for the octaviaworkers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OctaviaWorkerSpec defines the desired state of OctaviaWorker
            properties:
              containerImage:
                description: ContainerImage - Amphora Controller Container Image URL
                type: string
              customServiceConfig:
                default: '# add your customization here'
                description: CustomServiceConfig - customize the service config using
                  this parameter to change service defaults, or overwrite rendered
                  information using raw OpenStack config format. The content gets
                  added to to /etc/<service>/<service>.conf.d directory as custom.conf
                  file.
                type: string
              databaseInstance:
                description: MariaDB instance name Right now required by the maridb-operator
                  to get the credentials from the instance to create the DB Might
                  not be required in future
                type: string
              databaseUser:
                default: octavia
                description: 'DatabaseUser - optional username used for octavia DB,
                  defaults to octavia TODO: -> implement needs work in mariadb-operator,
                  right now only octavia'
                type: string
              debug:
                description: Debug - enable debug for service deployment
                type: boolean
              defaultConfigOverwrite:
                additionalProperties:
                  type: string
                description: 'ConfigOverwrite - interface to overwrite default config
                  files like e.g. logging.conf or policy.json. But can also be used
                  to add additional files. Those get added to the service config dir
                  in /etc/<service> . TODO: -> implement'
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector to target subset of worker nodes running
                  this service
                type: object
              passwordSelectors:
                default:
                  database: OctaviaDatabasePassword
                  service: OctaviaPassword
                description: PasswordSelectors - Selectors to identify the DB and
                  AdminUser password from the Secret
                properties:
                  database:
                    default: OctaviaDatabasePassword
                    description: 'Database - Selector to get the octavia Database
                      user password from the Secret TODO: not used, need change in
                      mariadb-operator'
                    type: string
                  service:
                    default: OctaviaPassword
                    description: Service - Selector to get the service user password
                      from the Secret
                    type: string
                type: object
              replicas:
                default: 1
                description: Replicas - Octavia Worker Replicas
                format: int32
                maximum: 32
                minimum: 0
                type: integer
              resources:
                description: Resources - Compute Resources required by this service
                  (Limits/Requests). https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
              secret:
                description: Secret containing OpenStack password information for
                  octavia OctaviaDatabasePassword, AdminPassword
                type: string
              serviceUser:
                default: octavia
                description: 'ServiceUser - service user name (TODO: beagles, do we
                  need this at all)'
                type: string
            required:
            - secret
            type: object
          status:
            description: OctaviaWorkerStatus defines the observed state of OctaviaWorker
            properties:
              conditions:
                description: Conditions
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              readyCount:
                description: ReadyCount of octavia API instances
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
